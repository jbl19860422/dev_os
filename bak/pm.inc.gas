#type attribute when s=1
.SET	DA_TYPE_ACCESSED,	0x1
.SET	DA_TYPE_EXECUTE,	0x8
.SET	DA_TYPE_DATA_WRITE,	0x2
.SET	DA_TYPE_DATA_ED,	0x4	
.SET	DA_TYPE_CODE_READ,	0x2	
.SET	DA_TYPE_CODE_CONFIRM,	0x4
#type attr when s=0
.SET	DA_TYPE_286TSS,		0x1
.SET 	DA_TYPE_LDT,		0x2
.SET	DA_TYPE_BUSY_286TSS,	0x3
.SET	DA_TYPE_286GATE,	0x4
.SET	DA_TYPE_TASKGATE,	0x5
.SET	DA_TYPE_286INTGATE,	0x6
.SET	DA_TYPE_286TRAPGATE,	0x7
.SET	DA_TYPE_386TSS,		0x9
.SET	DA_TYPE_BUSY_386TSS,	0xB
.SET	DA_TYPE_386GATE,	0xC
.SET	DA_TYPE_386INTGATE,	0xE
.SET	DA_TYPE_386TRAPGATE,	0xF
#data and code
.SET	DA_S_DC,		0x10
#system gate
.SET	DA_S_SG,		0x0
	
.SET	DA_DPL_0,		0x0
.SET	DA_DPL_1,		0x20
.SET	DA_DPL_2,		0x40
.SET	DA_DPL_3,		0x60

.SET	DA_P_1,			0x80
.SET	DA_P_0,			0x0

.SET	DA_DB_SEGLIMIT_4G,	0x4000
.SET	DA_DB_SEGLIMIT_64K,	0x0
.SET	DA_DB_STACK_ESP32,	0x4000
.SET	DA_DB_STACK_SP16,	0x0

.SET	DA_G_LIMIT4K,		0x1
.SET	DA_G_LIMITBYTE,		0x0


.MACRO	DESCRIPTOR base,limit,attr
	.WORD	\limit&0xFFFF
	.WORD	\base&0xFFFF
	.BYTE	(\base>>16)&0xFF
	.BYTE	\attr&0xFF
	.BYTE	((\limit>>20)&0x0F)|((\attr>>4)&0xF0)
	.BYTE	\base>>24&0xFF
.ENDM

